# Copyright 2024 Circle Internet Group, Inc. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Failed CI Tests Notifier
on:
  workflow_run:
    workflows: [CI]
    types: [completed]

permissions:
  issues: write

env:
  ISSUE_TITLE: "[FAILED] Sui CI tests are failing"

jobs:
  failed_scheduled_run_notifier:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event == 'schedule' && github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Check if issue already exists
        id: check-if-issue-exists
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const response = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ["bug"],
                state: "open",
              });
              const openIssue = response.data.find((d) => d.title === process.env.ISSUE_TITLE);
              core.setOutput("issue-number", openIssue?.number || "");
            } catch (e) {
              core.error(JSON.stringify(e.response.data));
              core.setFailed(`Error found: ${e.response.data.message}`);
            }

      - name: Create issue if not exists
        if: ${{ steps.check-if-issue-exists.outputs.issue-number == '' }}
        uses: actions/github-script@v7
        env:
          WORKFLOW_RUN_URL: ${{ github.event.workflow_run.html_url }}
        with:
          script: |
            try {
              const response = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: process.env.ISSUE_TITLE,
                body: `Latest failing run: ${process.env.WORKFLOW_RUN_URL}\n` + 
                  "Assigned to @circlefin/engineering-centre-tokens-approvers"",
                labels: ["bug"],
              });
            } catch (e) {
              core.error(JSON.stringify(e.response.data));
              core.setFailed(`Error found: ${e.response.data.message}`);
            }

      - name: Comment on issue if exists
        if: ${{ steps.check-if-issue-exists.outputs.issue-number != '' }}
        uses: actions/github-script@v7
        env:
          WORKFLOW_RUN_URL: ${{ github.event.workflow_run.html_url }}
          ISSUE_NUMBER: ${{ steps.check-if-issue-exists.outputs.issue-number }}
        with:
          script: |
            try {
              const response = await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: Number(process.env.ISSUE_NUMBER),
                body: `Latest failing run: ${process.env.WORKFLOW_RUN_URL}\n` + 
                  "Assigned to @circlefin/engineering-centre-tokens-approvers"",
              });
            } catch (e) {
              core.error(JSON.stringify(e.response.data));
              core.setFailed(`Error found: ${e.response.data.message}`);
            }
